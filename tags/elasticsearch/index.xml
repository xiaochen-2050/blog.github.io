<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Elasticsearch on Xiao.chen</title>
    <link>https://blog.wisekee.com/tags/elasticsearch/</link>
    <description>Recent content in Elasticsearch on Xiao.chen</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2020, Xiao.chen; all rights reserved.</copyright>
    <lastBuildDate>Thu, 15 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.wisekee.com/tags/elasticsearch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ECK stack up and running and collect logs use fluentd in kubernetes</title>
      <link>https://blog.wisekee.com/post/eck-vs-flutd-collect-logs/</link>
      <pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wisekee.com/post/eck-vs-flutd-collect-logs/</guid>
      <description>
        
          
            Use the Elasticsearch cloud on k8s component as logs and apm platform. the Fluentd collect the kubernetes container logs to Elasticsearch and kibana represent and search
The ECK operator configure The ECK operator custom resources use kubectl providers.
1terraform { 2 required_providers { 3 kubectl = { 4 source = &amp;#34;gavinbunney/kubectl&amp;#34; 5 version = &amp;#34;1.11.1&amp;#34; 6 } 7 } 8} 9 10resource &amp;#34;helm_release&amp;#34; &amp;#34;eck-operator&amp;#34; { 11 chart = &amp;#34;${path.module}/../../../../../charts/eck-operator&amp;#34; 12 name = &amp;#34;eck-operator&amp;#34; 13 namespace = &amp;#34;kube-monitor&amp;#34; 14 15 values = [ 16 &amp;lt;&amp;lt;-EOF 17 image: 18 repository: &amp;#34;${var.
          
          
        
      </description>
    </item>
    
    <item>
      <title>ElasticSearch monitoring and  alert base on ElastAlert</title>
      <link>https://blog.wisekee.com/post/elastalert-usage/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wisekee.com/post/elastalert-usage/</guid>
      <description>
        
          
            Dynamically generate alarm rules and send email to relative people.based on a given parameter or configuration Elastalert
The directory construct look following 1├── elastalert 2├── generate_rule.py 3├── param.json 4├── rules 5└── template You can also through pip install elastalert installing elastalert package. I&amp;rsquo;m going to use it directly here The templatedirectory store tpl file, use this template generate some rules file to rules directory. and used elastalert
Configuration file param.json 1{ 2 &amp;#34;dev&amp;#34;: { 3 &amp;#34;public_config&amp;#34;: { 4 &amp;#34;run_every&amp;#34;: 5, 5 &amp;#34;buffer_time&amp;#34;: 15, 6 &amp;#34;es_host&amp;#34;: &amp;#34;dev.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
