<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>frontend on Xiao.chen</title>
    <link>https://blog.wisekee.com/tags/frontend/</link>
    <description>Recent content in frontend on Xiao.chen</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2020, Xiao.chen; all rights reserved.</copyright>
    <lastBuildDate>Thu, 18 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.wisekee.com/tags/frontend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>To use the vite management the react project</title>
      <link>https://blog.wisekee.com/post/vite-react-getting-started/</link>
      <pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wisekee.com/post/vite-react-getting-started/</guid>
      <description>
        
          
            Install the bun 1HOMEBREW_NO_AUTO_UPDATE=1 brew install oven-sh/bun/bun Initialization the project use bun 1bun create vite@latest part1 --template react 2cd part1 3bun install 4bun run dev Or use the pnpm 1pnpm create vite@latest part1 --template react 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Vue custom component getting started</title>
      <link>https://blog.wisekee.com/post/vue-custom-components/</link>
      <pubDate>Sun, 10 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wisekee.com/post/vue-custom-components/</guid>
      <description>
        
          
            Define the custom component MessageBox in vue file this file named MessageBox.vue
1&amp;lt;template&amp;gt; 2 &amp;lt;transition name=&amp;#34;fade-in&amp;#34; mode=&amp;#34;out-in&amp;#34;&amp;gt; 3 &amp;lt;div 4 v-if=&amp;#34;show&amp;#34; 5 :class=&amp;#34;[&amp;#39;alert&amp;#39;, &amp;#39;notification&amp;#39;, &amp;#39;is-&amp;#39; + type]&amp;#34; 6 :style=&amp;#34;{ transform: &amp;#39;translate(-50%,&amp;#39; + offset + &amp;#39;px)&amp;#39; }&amp;#34; 7 &amp;gt; 8 &amp;lt;button 9 @click=&amp;#34;() =&amp;gt; (this.show = !this.show)&amp;#34; 10 v-show=&amp;#34;this.showBtn&amp;#34; 11 class=&amp;#34;delete&amp;#34; 12 &amp;gt;&amp;lt;/button&amp;gt; 13 &amp;lt;p v-html=&amp;#34;message&amp;#34;&amp;gt;&amp;lt;/p&amp;gt; 14 &amp;lt;/div&amp;gt; 15 &amp;lt;/transition&amp;gt; 16&amp;lt;/template&amp;gt; 17 18&amp;lt;script&amp;gt; 19export default { 20 name: &amp;#34;MessageBox&amp;#34;, 21 props: { 22 message: { 23 thype: String, 24 required: true, 25 }, 26 type: { 27 type: String, 28 default: &amp;#34;default&amp;#34;, 29 }, 30 offset: { 31 type: Number, 32 default: 20, 33 }, 34 showBtn: { 35 type: Boolean, 36 default: true, 37 }, 38 }, 39 data() { 40 return { 41 show: true, 42 }; 43 }, 44 methods: { 45 isShow(status) { 46 this.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to create sample frontend in vue use cli and vite</title>
      <link>https://blog.wisekee.com/post/vue-app-getting-started/</link>
      <pubDate>Sat, 18 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wisekee.com/post/vue-app-getting-started/</guid>
      <description>
        
          
            The vue cli 1 2npm i -g @vue/cli 3vue --version 4vue create vue-starter-project 5 6# create local development configuration file 7touch .env.development Use NODE_ENV to switch build or compiler and coding 1# can define the different environment file 2touch .env.development.local # to local testing for development don&amp;#39;t commit the git 3touch .env.staging # to staging environment to configuration 4 5# The env file content may be 6echo &amp;#39;NODE_ENV=&amp;#34;staging&amp;#34;&amp;#39; 7 8# integration the env file to launch 9# { 10# .
          
          
        
      </description>
    </item>
    
    <item>
      <title>Use golang serve the static file embedded to binary file</title>
      <link>https://blog.wisekee.com/post/golang-web-static-fileserver/</link>
      <pubDate>Wed, 08 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wisekee.com/post/golang-web-static-fileserver/</guid>
      <description>
        
          
            The golang code to embed file to compile file use the annotatioins to embed folder, this should embed current public folder to binary file
1 2import ( 3	&amp;#34;embed&amp;#34; 4 &amp;#34;fmt&amp;#34; 5 &amp;#34;os&amp;#34; 6 &amp;#34;io/fs&amp;#34; 7	&amp;#34;net/http&amp;#34; 8 &amp;#34;os/signal&amp;#34; 9	&amp;#34;runtime&amp;#34; 10	&amp;#34;strings&amp;#34; 11	&amp;#34;syscall&amp;#34; 12) 13 14 15//go:embed public 16var staticFiles embed.FS 17 18 19func main() { 20 public, _ := fs.Sub(staticFiles, &amp;#34;public&amp;#34;) 21	// handle static files include HTML, CSS and JavaScripts.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Use webpack bundle the frontend sample example</title>
      <link>https://blog.wisekee.com/post/webpack-sample-settings/</link>
      <pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wisekee.com/post/webpack-sample-settings/</guid>
      <description>
        
          
            Initialization the structure 1# make the demo folder 2mkdir webpack-demo 3 4# init the project 5cd webpack-demo 6npm init -y 7npm install webpack webpack-cli --save-dev 8 9# set the project to private prevent and accidental publish to public hub 10# add the `&amp;#34;private&amp;#34;: true,` to package.json 11 12# create config file for webpack keep empty temporary 13touch webpack.config.js 14 15mkdir dist src 16touch dist/index.html 17touch src/index.js A little the code to src/index.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Tailwindcss getting started</title>
      <link>https://blog.wisekee.com/post/tailwindcss-getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wisekee.com/post/tailwindcss-getting-started/</guid>
      <description>
        
          
            Initialization the project 1mkdir tailwind 2cd tailwind 3pnpm create vite@latest my-project -- --template vue 4pnpm install -D tailwindcss postcss autoprefixer 5# this will create a `tailwind.config.js` `postcss.config.js` 6pnpm tailwindcss init -p 7pnpm run dev config the tailwind css project add the package to src/style.css 1@tailwind base; 2@tailwind components; 3@tailwind utilities; config the postcss.config.js 1export default { 2 plugins: { 3 tailwindcss: {}, 4 autoprefixer: {}, 5 }, 6} config the tailwind.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
